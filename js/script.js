$(document).ready(function () { for ($.sy_ajaxyukle = function (a) { var b = $.extend({ async: !1, servis: "", params: "{}", doldur: "" }, a); AjaxIslemleri.yukle(a.async, b.servis, b.params, b.doldur) }, $.sy_ajaxislemyukle = function (a) { var b = $.extend({ async: !1, servis: "", params: "{}", doldur: "" }, a); AjaxIslemleri.single_yukle(a.async, b.servis, b.params, b.doldur) }, $.sy_ajaxjsonyukle = function (a) { var b = $.extend({ async: !1, servis: "", params: "{}", doldur: "" }, a); AjaxIslemleri.json_veri(a.async, b.servis, b.params, b.doldur) }, $.fn.serializeObject = function () { var a = {}, b = this.serializeArray(); return $.each(b, function () { void 0 !== a[this.name] ? (a[this.name].push || (a[this.name] = [a[this.name]]), a[this.name].push(this.value || "")) : a[this.name] = this.value || "" }), a }, i = 0; i < $(".uicontrol").size() ; i++) { var a = $(".uicontrol:eq('" + i + "')").attr("id"); sy.uiLoad(a) } }), $(document).ajaxStart(function () { }), $(document).ajaxStop(function () { }), $(document).ajaxError(function (a, b, c, d) { alert("İstek işlenirken bir hata oluştu hata detayları için konsola bakınız."), console.log(a.handleObj.origType + " >> İstek işlenirken bir hata oluştu: " + b.status + " " + b + "<br>" + d + "<br>" + c.url, 1e4), console.log(b), console.log(a), console.log(d) }); var sy = { kodolustur: function (a) { for (var b = "", c = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", d = 0; d < a; d++) b += c.charAt(Math.floor(Math.random() * c.length)); return b }, metinkisalt: function (a, b) { if (void 0 != a) { var e, f, g, c = b, d = "..."; return a.length > c ? (e = a.substr(0, c), f = a.substr(c - 1, a.length - c), g = e + d) : g = a } }, ResolveClientUrl: function (a) { var b = window.location.hostname; b = b.indexOf("localhost") != -1 ? location.protocol + "//" + window.location.hostname + ":" + window.location.port + "/" : location.protocol + "//" + window.location.hostname + "/"; var i, c = document, d = c.getElementsByTagName("base")[0], e = d && d.href, f = c.head || c.getElementsByTagName("head")[0], g = d || f.appendChild(c.createElement("base")), h = c.createElement("a"); return g.href = b, h.href = a, i = h.href, d ? d.href = e : f.removeChild(g), i }, uiEditor: function (a) { $("#" + a + " .control .surukleniyor").unbind("dblclick"), $("#" + a).before("<p class='baslik'>Geliştirici Modu<br><span style='font-size:10pt; letter-spacing:1px;'>Tasarım Dosyası: <strong>" + sy.ResolveClientUrl("Layouts/") + a + ".json</strong></span></p>"), $("#" + a + "Save").remove(), $("#" + a + " .control").addClass("surukleniyor"), $("#" + a).addClass("developer_mode"), $("#" + a + " .control.surukleniyor").dblclick(function () { var a = this.id, b = window.innerHeight, c = window.innerWidth, d = $("#" + a).attr("style"); $("body").addClass("sifir"), $("body").append('<div id="modalContainer_' + a + '" class="developer_modal_shadow" style="width:' + c + "px; height:" + b + 'px;"></div>'), $("#modalContainer_" + a).append('<div class="developer_modal"><div class="developer_modal_title">&nbsp;&nbsp;' + a + " Özellikleri</div><div><p>Style:</p><textarea>" + d + '</textarea><p><button type="button" class="NormalBtn">Değişiklikleri Kaydet</button><button type="button" class="NormalBtn">Varsayılan</button><button type="button" class="NormalBtn">İptal</button></p><p class="dev_info">Değişiklik yaptıkça arka plan güncellenecektir.</p></div></div>'), $("#modalContainer_" + a + " textarea").keyup(function () { $("#" + a).attr("style", this.value) }), $("#modalContainer_" + a + " button:eq(0)").click(function () { $("#" + a).attr("style", $("#modalContainer_" + a + " textarea").val()), $("#modalContainer_" + a + " button").unbind("click"), $("#modalContainer_" + a + " textarea").unbind("keyup"), $("#modalContainer_" + a).remove(), $("body").removeClass("sifir") }), $("#modalContainer_" + a + " button:eq(1)").click(function () { $("#" + a).attr("style", d), $("#modalContainer_" + a + " textarea").val(d) }), $("#modalContainer_" + a + " button:eq(2)").click(function () { $("#" + a).attr("style", d), $("#modalContainer_" + a + " button").unbind("click"), $("#modalContainer_" + a + " textarea").unbind("keyup"), $("#modalContainer_" + a).remove(), $("body").removeClass("sifir") }) }), $("#" + a + " .control.controlLabel").css("background-color", "#2ebe77"), $("#" + a + " .control.controlButton").css("background-color", "#b1c354"), $("#" + a + " .control.controlInput").css("background-color", "#5e84d1"), $("#" + a + " .control.controlTextArea").css("background-color", "#ff3333"), $("#" + a + " .control.controlSelect").css("background-color", "#99ffcc"), $("#" + a + " .control").draggable({ containment: "#" + a, scroll: !1, start: function (a, b) { $(this).data("preventBehaviour", !0) } }), $("#" + a + " .control").find(":input").on("mousedown", function (b) { var c = new MouseEvent("mousedown", { screenX: b.screenX, screenY: b.screenY, clientX: b.clientX, clientY: b.clientY, view: window }); $(this).closest("#" + a + " .control")[0].dispatchEvent(c) }).on("click", function (b) { var c = $(this).closest("#" + a + " .control"); c.data("preventBehaviour") && (b.preventDefault(), c.data("preventBehaviour", !1)) }), $("#" + a).before("<p  id='" + a + "Save'><button class='NormalBtn' type='button'>Değişiklikleri Kaydet</button>&nbsp;<button class='NormalBtn' type='button'>Vazgeç</button></p>"), $("#" + a + "Save button:eq(0)").attr("onclick", "sy.kaydetIcerik('" + a + "');"), $("#" + a + "Save button:eq(1)").attr("onclick", "sy.iptalIcerik('" + a + "');") }, kaydetIcerik: function (a) { $("#" + a + " .control.surukleniyor").unbind("dblclick"); var c, b = []; $("#" + a + " .control").removeClass("surukleniyor"), $("#" + a + " .control.controlLabel").css("background-color", ""), $("#" + a + " .control.controlButton").css("background-color", ""), $("#" + a + " .control.controlInput").css("background-color", ""), $("#" + a + " .control.controlTextArea").css("background-color", ""), $("#" + a + " .control.controlSelect").css("background-color", ""); var d = $("#" + a + " .controlLabel").size(); for (i = 0; i < d; i++) { var e = $("#" + a + " .controlLabel:eq(" + i + ")").attr("style"), f = $("#" + a + " .controlLabel:eq(" + i + ")").attr("id"); c = { ID: f, STYLE: e }, b.push(c) } var g = $("#" + a + " .controlButton").size(); for (i = 0; i < g; i++) { var e = $("#" + a + " .controlButton:eq(" + i + ")").attr("style"), f = $("#" + a + " .controlButton:eq(" + i + ")").attr("id"); c = { ID: f, STYLE: e }, b.push(c) } var h = $("#" + a + " .controlInput").size(); for (i = 0; i < h; i++) { var e = $("#" + a + " .controlInput:eq(" + i + ")").attr("style"), f = $("#" + a + " .controlInput:eq(" + i + ")").attr("id"); c = { ID: f, STYLE: e }, b.push(c) } var h = $("#" + a + " .controlTextArea").size(); for (i = 0; i < h; i++) { var e = $("#" + a + " .controlTextArea:eq(" + i + ")").attr("style"), f = $("#" + a + " .controlTextArea:eq(" + i + ")").attr("id"); c = { ID: f, STYLE: e }, b.push(c) } var h = $("#" + a + " .controlSelect").size(); for (i = 0; i < h; i++) { var e = $("#" + a + " .controlSelect:eq(" + i + ")").attr("style"), f = $("#" + a + " .controlSelect:eq(" + i + ")").attr("id"); c = { ID: f, STYLE: e }, b.push(c) } $("#" + a + " .control").draggable("destroy"), $("#" + a + "Save").remove(), $(".baslik").remove(), $("#" + a).removeClass("developer_mode"), $.ajax({ type: "POST", async: !0, url: sy.ResolveClientUrl("FrameworkHandler.ashx"), data: "layout=" + JSON.stringify(b) + "&control=" + a, success: function (a) { alert(a) } }) }, iptalIcerik: function (a) { $("#" + a + " .control.surukleniyor").unbind("dblclick"), $("#" + a).removeClass("developer_mode"), $("#" + a + " .control .surukleniyor").unbind("dblclick"), $("#" + a + " .control").draggable("destroy"), $("#" + a + " .control").removeClass("surukleniyor"), $("#" + a + " .control.controlLabel").css("background-color", ""), $("#" + a + " .control.controlButton").css("background-color", ""), $("#" + a + " .control.controlInput").css("background-color", ""), $("#" + a + " .control.controlTextArea").css("background-color", ""), $("#" + a + " .control.controlSelect").css("background-color", ""), $("#" + a + "Save").remove(), $(".baslik").remove(), sy.uiLoad(a) }, uiLoad: function (a) { $.ajax({ async: !0, type: "GET", url: sy.ResolveClientUrl("Layouts/" + a + ".json"), contentType: "application/json; charset=utf-8", dataType: "json", success: function (a) { for (var b = 0; b < a.length; b++) $("#" + a[b].ID).attr("style", a[b].STYLE) }, error: function (b) { $.ajax({ type: "POST", url: sy.ResolveClientUrl("FrameworkHandler.ashx"), data: "layout=[]&control=" + a, success: function (a) { console.log(a) } }), console.log((new Error).lineNumber + ": İçerik yüklenemedi! Eksik veya hatalı parametre!" + b) } }) } }, AjaxIslemleri = { yukle: function (a, b, c, d) { $.ajax({ async: a, type: "POST", url: b, data: c, contentType: "application/json; charset=utf-8", dataType: "json", success: function (a) { $(a.d).each(function () { var a = this.split("~"); d(a) }) }, error: function (a) { console.log((new Error).lineNumber + ": İçerik yüklenemedi! Eksik veya hatalı parametre!" + a) } }) }, single_yukle: function (a, b, c, d) { $.ajax({ async: a, type: "POST", url: b, data: c, contentType: "application/json; charset=utf-8", dataType: "json", success: function (a) { d(a.d) }, error: function (a) { console.log((new Error).lineNumber + ": İçerik yüklenemedi! Eksik veya hatalı parametre!" + a) } }) }, json_veri: function (a, b, c, d) { $.ajax({ async: a, type: "POST", url: b, data: c, contentType: "application/json; charset=utf-8", dataType: "json", success: function (a) { for (var b = $.parseJSON(a.d), c = 0; c < b.length; c++) d(b[c]) }, error: function (a) { console.log((new Error).lineNumber + ": İçerik yüklenemedi! Eksik veya hatalı parametre!" + a) } }) } };